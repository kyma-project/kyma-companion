name: Integration Test

on:
  pull_request_target:
    types: [labeled, opened, synchronize, reopened, ready_for_review]
    branches:
      - "main"
      - "release-**"

## **IMPORTANT**: If any changes are made to how to run the integration tests. Make sure to update the steps for
## integration-tests in the create-release.yml workflow as well.
permissions: read-all

jobs:
  check-if-test-is-needed:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: none
    outputs:
      run_tests: ${{ steps.determine.outputs.run_tests }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files_ignore: | # do not use quotes
            - docs/**
            - **.md
            - CODEOWNERS
            - LICENSE
            - LICENSES/**
            - .reuse/**
            - config/**
            - data/**
            - doc_indexer/**
            - scripts/**

      - name: Determine if tests should run
        id: determine
        run: |
          echo "Changed files: '${{ steps.changed-files.outputs.all_changed_files }}'"

          if [ -z "${{ steps.changed-files.outputs.all_changed_files }}" ]; then
            echo "No relevant files changed. Skipping tests."
            echo "run_tests=false" >> $GITHUB_OUTPUT
          else
            echo "Relevant files changed. Running tests."
            echo "run_tests=true" >> $GITHUB_OUTPUT
          fi

  integration-test:
    runs-on: ubuntu-latest
    needs: check-if-test-is-needed
    if: contains(github.event.pull_request.labels.*.name, 'run-integration-test') && needs.check-if-test-is-needed.outputs.run_tests == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Extract Python version
        id: python-version
        run: ./scripts/shell/extract-python-version.sh

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --with dev

      - name: Run integration tests
        env:
          LOG_LEVEL: "DEBUG"
        run: |
          echo "${{ secrets.INTEGRATION_TEST_CONFIG }}" | base64 --decode | jq > $GITHUB_WORKSPACE/config/config.json
          poetry run poe test-integration
