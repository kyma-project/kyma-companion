[project]
name = "kyma-companion"
version = "0.1.0"
description = "Kyma Companion is an AI Kyma assistant that helps you to manage your Kyma runtime"
readme = "README.md"
license = "Apache-2.0"
authors = [
  { name = "Muhammad Faizan", email = "m.faizan@sap.com" },
  { name = "Friedrich Wilken", email = "jens.wilken@sap.com" },
  { name = "Piotr Bochynski", email = "piotr.bochynski@sap.com" },
  { name = "Mansur Uralov", email = "m.uralov@sap.com" },
  { name = "Mohammad Tanweer Salah", email = "mohammad.tanweer.salah@sap.com" },
]
requires-python = "==3.12.*"
dependencies = [
  "cryptography (>=44.0.3,<45.0.0)",
  "fastapi[standard] (>=0.115.11,<0.116.0)",
  "hdbcli (>=2.24.26,<3.0.0)",
  "kubernetes (>=32.0.1,<33.0.0)",
  "langchain[all] (>=0.3.25,<0.4.0)",
  "langfuse (>=2.60.8,<3.0.0)",
  "langgraph[all] (>=0.4.8,<0.5.0)",
  "prometheus-client (>=0.21.1,<0.22.0)",
  "pyjwt (>=2.10.1,<3.0.0)",
  "python-decouple (>=3.8,<4.0)",
  "redis (>=5.2.1,<6.0.0)",
  "requests (>=2.32.4,<3.0.0)",
  "sap-ai-sdk-gen[all] (>=5.4.2,<6.0.0)",
  "scrubadub (>=2.0.1,<3.0.0)",
  "tenacity (>=9.0.0,<10.0.0)",
  "tiktoken (>=0.9.0,<0.10.0)",
  "uvicorn (>=0.34.3,<0.35.0)"
]
[tool.poetry]
packages = [{ include = "src" }]
package-mode = false

[tool.poetry.group.test.dependencies]
deepeval = { extras = ["all"], version = "^3.0.1" }
fakeredis = "^2.27.0"
prettytable = "^3.15.1"
pytest = "^8.3.5"
pytest-asyncio = "^0.25.3"
pytest-cov = { extras = ["all"], version = "^6.1.1" }
pytest-dotenv = "^0.5.2"
pytest-mock = "^3.14.0"
pytest-rerunfailures = "^12.0"
pytest-sugar = "^1.0.0"
pytest-xdist = "^3.8.0"
pyyaml = "^6.0.2"
ragas = "^0.2.15"
termcolor = "^2.5.0"
types-pyyaml = "^6.0.12.20241230"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
cryptography = "^44.0.2"
flake8 = "^7.1.2"
flake8-bugbear = "^24.12.12"
ipython = "^9.0.2"
mypy = "^1.17.1"
poethepoet = "^0.33.0"
poetry-plugin-sort = "^0.3.0"
ruff = "^0.11.11"
types-requests = "^2.32.0.20250306"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
pythonpath = ["src"]
testpaths = ["tests"]
env_files = [".env.test"]
asyncio_default_fixture_loop_scope = "function"

[tool.poe.tasks]
lint = "ruff check ."
typecheck = "mypy . --pretty"
format = "black . --check"
codecheck = ["lint", "typecheck", "format"]
format-fix = "black ."
lint-fix = "ruff check . --fix"
code-fix = ["format-fix", "lint-fix"]
test = "pytest -n 2 -v tests/unit"
test-local = "pytest -n auto -v tests/unit"
test-integration = "pytest -n 2 -v tests/integration -x --reruns=6 --reruns-delay=10 -r=aR"
test-integration-local = "pytest -n auto -v tests/integration -x --reruns=6 --reruns-delay=10 -r=aR"
run = "fastapi run src/main.py --port 8000"
run-local = "fastapi dev src/main.py --port 8000"
sort = "poetry sort"
pre-commit-check = ["sort", "code-fix", "codecheck", "test-local"]
